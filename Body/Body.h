// 
// File: Body.h
// 
// Date: 07.01.15 15:12
// 
// Generated by: Idatto, version 1.3
// 
// Description: Header file for body simulation


#ifndef body_
#define body_

#include <vector>
#include <string>

class Body {
    public:
    
    Body(float BSL, int constant);
    ~Body();
    
    // changes the blood sugar level;
    // increasing: if True: rising; if False: falling
    // strength: the factor the BSL is rising or falling
    virtual bool changeBloodSugarLevel(float strength, bool increasing, bool use_insulin_constant);
    virtual float getBloodSugarLevel();
    virtual void setBloodSugarLevel(float);
    
    private:
    float BloodsugarLevel;
    int insulin_constant;

};

//class for communicating with the BSL-generating-Thread
class thread_controller {
private:
    float   ThreadBodyFactor;
    bool    ThreadRising;
    bool    ThreadUseGlucagon;
    bool    ThreadUseInsulin;
    int     ThreadInsulinUnits;
    bool    ThreadEndThread;
    
public:
    // constructor , destructor
    thread_controller();
    ~thread_controller();
    
    // ThreadBodyFactor -- tells the thread the body factor
    void    setThreadBodyFactor(float factor);
    float   getThreadBodyFactor(void);
    
    // ThreadRising -- tells the thread to rise or fall the BSL level
    void setThreadRising(bool value);
    bool getThreadRising(void);
    
    // ThreadUseGlucagon -- tells the thread to use glucagon
    void setThreadUseGlucagon(bool value);
    bool getThreadUseGlucagon(void);
    
    // ThreadUseInsulin -- tells the thread to use insulin
    void setThreadUseInsulin(bool value);
    bool getThreadUseInsulin(void);
    
    // ThreadUseInsulinUnits -- tells the thread the amount of inuslin units
    void setThreadInsulinUnits(int units);
    int getThreadInsulinUnits(void);
    
    // ThreadEndThread -- tells the thread to terminate
    void setThreadEndThread(bool value);
    void getThreadEndThread(void);
};

#endif
