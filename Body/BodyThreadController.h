// 
// File: BodyThreadController.h
// 
// Date: 09.01.15 15:12
// 
// Generated by: Johannes Kinzig
// 
// Description: Header file for class which is in charge of communicating between threads and main


#ifndef bodyThreadController_
#define bodyThreadController_

#include <vector>
#include <string>

//class for communicating with the BSL-generating-Thread
class BodyThreadController {
public:
    // constructor, destructor
    BodyThreadController();
    ~BodyThreadController();
    
    // ThreadBodyFactor -- tells the thread the body factor
    virtual void setThreadBodyFactor(float factor);
    virtual float getThreadBodyFactor(void);
    
    // ThreadRising -- tells the thread to rise or fall the BSL level
    virtual void setThreadRising(bool value);
    virtual bool getThreadRising(void);
    
    // ThreadUseGlucagon -- tells the thread to use glucagon
    virtual void setThreadUseGlucagon(bool value);
    virtual bool getThreadUseGlucagon(void);
    
    // ThreadUseInsulin -- tells the thread to use insulin
    virtual void setThreadUseInsulin(bool value);
    virtual bool getThreadUseInsulin(void);
    
    // ThreadUseInsulinUnits -- tells the thread the amount of inuslin units
    virtual void setThreadInsulinUnits(int units);
    virtual int getThreadInsulinUnits(void);
    virtual void minusThreadInsulinUnits(int); // subtracts the argument from ThreadInsulinUnits
    
    // ThreadEndThread -- tells the thread to terminate
    virtual void setThreadEndThread(bool value);
    virtual bool getThreadEndThread(void);
    
    
private:
    float   ThreadBodyFactor;
    bool    ThreadRising;
    bool    ThreadUseGlucagon;
    bool    ThreadUseInsulin;
    int     ThreadInsulinUnits;
    bool    ThreadEndThread;

};

#endif
