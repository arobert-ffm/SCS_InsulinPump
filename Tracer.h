// 
// File: Tracer.h
// 
// Date: 24.12.14 17:11
// 
// Generated by: Idatto, version 1.3
// 
// Description:


#ifndef tracer_
#define tracer_

#include <vector>
#include <string>



class Tracer
{
    public:
        virtual std::string& getFilename();
        virtual void setFilename(std::string& value);

        // Writes the message to the log file. Every Message is signed by date 
        // and time. 
        // When writing to file has finished, “True” is returned!
        virtual bool writeStatusLog(std::string& Message);
        // Writes the message to the log file. Every Message is signed by date 
        // and time. 
        // When writing to file has finished, “True” is returned!
        virtual bool writeWarningLog(std::string& Message);
        // Writes the message to the log file. Every Message is signed by date 
        // and time. 
        // When writing to file has finished, “True” is returned!
        virtual bool writeCriticalLog(std::string& Message);
        // Plays an acoustic sound and returns “True” when done
        virtual bool playAcousticWarning();
        // vibrates on a specific event and returns “True” when done
        virtual bool vibrationWarning();

    private:
        // The complete filename and path will stored here.
        std::string filename;

};

#endif
